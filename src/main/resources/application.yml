server:
  port: 8080
  servlet:
    session:
      cookie:
        same-site: lax
    multipart:
#      file-size-threshold: 0B # 파일을 디스크에 저장하지 않고 메모리에 저장하는 최소 크기 (default: 0B)
#      location: /users/charming/temp # 업로드된 파일이 임시로 저장되는 디스크 위치 (default: WAS가 결정)
      max-file-size: 3072MB # 한개 파일의 최대 사이즈 (3GB = 3072MB)
      max-request-size: 4096MB # 한개 요청의 최대 사이즈 (4GB = 4096MB)
      enabled: true # 멀티파트 업로드 지원여부 (default: true)

spring:
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_TOKEN}
            client-secret: ${GOOGLE_SECRET}
            scope: profile, email
            redirect-uri: "https://server.teenkiri.site/login/oauth2/code/google"
            client-name: Google
            authorization-grant-type: authorization_code
          kakao:
            client-id: ${KAKAO_TOKEN}
            client-secret: ${KAKAO_SECRET}
            scope: account_email, profile_nickname
            redirect-uri: "https://server.teenkiri.site/login/oauth2/code/kakao"
            client-name: Kakao
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
          naver:
            client-id: ${NAVER_TOKEN}
            client-secret: ${NAVER_SECRET}
            scope: email
            client-name: naver
            redirect-uri: "http://localhost:8088/login/oauth2/code/naver"
            authorization-grant-type: authorization_code
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/v2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
            user-name-attribute: sub
          naver:
            authorization-uri: "https://nid.naver.com/oauth2.0/authorize"
            token-uri: "https://nid.naver.com/oauth2.0/token"
            user-info-uri: "https://openapi.naver.com/v1/nid/me"
            user-name-attribute: response

  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher

  datasource:
    driver-class-name: org.mariadb.jdbc.Driver
    url: jdbc:mariadb://${DB_HOST}:3306/teenkiri
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    tomcat:
      max-active: 5

  jpa:
    database: mysql
    database-platform: org.hibernate.dialect.MariaDBDialect
    generate-ddl: true
    hibernate:
      ddl-auto: create
    show-sql: true

  redis:
    host: ${REDIS_HOST}
    port: ${REDIS_PORT}

  mail:
    host: ${AUTH_HOST}
    port: ${AUTH_PORT}
    username: ${AUTH_EMAIL}
    password: ${AUTH_KEY}
    properties:
      mail:
        transport:
          protocol: smtp
        smtp:
          auth: true
          starttls:
            enable: true
        debug: true

jwt:
  secret: ${JWT_SECRET}
  secretKeyRT: ${JWT_SECRET_RT}
  expirationRT: ${JWT_TIME_RT}
  expiration: ${JWT_TIME}  # 1 day in milliseconds

logging:
  level:
    root: INFO
    com.beyond.teenkiri: DEBUG
  file:
    name: application.log

cloud:
  aws:
    credentials:
      access-key: ${AWS_ACCESS_KEY}
      secret-key: ${AWS_SECRET_KEY}
    region:
      static: ap-northeast-2
    s3:
      bucket: ${BUCKET}